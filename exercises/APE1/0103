For this exercise, let us forget the names of the pirates; instead, let us denote pirates with a number, coinciding with their position in the hierarchical order.
Hence, we have the following names
\begin{enumerate}
\item Cabin Boy, pirate $p_{1}$
\item Mate, pirate $p_{2}$
\item Navigator, pirate $p_{3}$
\item Ship Master, pirate $p_{4}$
\item Captain, pirate $p_{5}$
\end{enumerate}

Of course, if we imagine a crew with more than five pirates, we can use the same idea to denote them: if $i < j$, then pirate $p_j$ is higher in the hierarchical order than pirate $p_i$.


Let us analyse each horizontal block. As a reminder, when the crew has $n$ pirates, the most highly ranked pirate proposes a particular division of the treasure. This pirate will always be pirate $p_{n}$, and he will need strictly more than $\floor*{\dfrac{n}{2}}$ votes to stay alive; in other words, he will need at least $\ceil*{\dfrac{n+1}{2}}$ votes to stay alive. However, since he will always vote for his proposition, we will need at least $\ceil*{\dfrac{n-1}{2}}$ other votes to stay alive.

%%%%%%%%%%%%%%%%%%
%%%%%%% 1 %%%%%%%%
%%%%%%%%%%%%%%%%%%
\paragraph{Block 1, $n = 1$.}
When pirate $p_{1}$ is alone, he will take the 10 gold pieces for himself.

%%%%%%%%%%%%%%%%%%
%%%%%%% 2 %%%%%%%%
%%%%%%%%%%%%%%%%%%
\paragraph{Block 2, $n = 2$.}
When the crew has two pirates, pirate $p_{2}$ will need strictly more than 1 vote, or at least 2 votes, to stay alive. Hence he will need his vote, and 1 extra vote. Putting everything together, we will need the vote of pirate $p_{1}$.
He can propose 10 gold pieces to pirate $p_{1}$ and 0 for himself, which seems like a proposition pirate $p_{1}$ will vote for. However, if pirate $p_{1}$ has the chance to throw pirate $p_{2}$ overboard, he will favor this option, since it does not affect his gold revenue.
This is why we wrote 0 and 10 in red on Table \ref{tab:pirates5}, because we could think that this is the final division of the gold, but in fact this situation will never happen: pirate $p_{1}$ will never vote for the proposition of pirate $p_{2}$, hence pirate $p_{2}$ will always die, and we will have $n = 2 \rightarrow n = 1$.

%%%%%%%%%%%%%%%%%%
%%%%%%% 3 %%%%%%%%
%%%%%%%%%%%%%%%%%%
\paragraph{Block 3, $n = 3$.}
When the crew has three pirates, pirate $p_{3}$ will need strictly more than 1 vote, or at least 2 votes, to stay alive. Hence he will need his vote, and 1 extra vote. Putting everything together, we will need the vote of pirate $p_{1}$ or the vote of pirate $p_{2}$.
Pirate $p_{2}$ will accept anything, because if pirate $p_{3}$ dies, then we are back to $n = 2$, and in that case, pirate $p_{2}$ dies as well.
Hence, pirate $p_{3}$ can simply propose 0 to $p_{2}$, 0 to $p_{1}$ and 10 for himself. Pirate $p_{1}$ will not vote for that proposition, but pirate $p_{2}$ will clearly vote for that proposition, hence we have found the repartition.

%%%%%%%%%%%%%%%%%%
%%%%%%% 4 %%%%%%%%
%%%%%%%%%%%%%%%%%%
\paragraph{Block 4, $n = 4$.}
When the crew has four pirates, pirate $p_{4}$ will need strictly more than 2 votes, or at least 3 votes, to stay alive. Hence he will need his vote, and 2 extra votes. Putting everything together, from the three pirates who are beneath him, he can only afford to loose one vote, not more.
It is impossible to make pirate $p_{3}$ happy, because he will always prefer to kill pirate $p_{4}$ and go back to block 3, where he wins 10. Hence, we will never have the vote of pirate $p_{3}$. However, in the previous case, pirates $p_{1}$ and $p_{2}$ both receive 0 gold coins, hence we can easily win their votes by giving them 1 coin each.
Hence, pirate $p_{4}$ will propose 1 to $p_{1}$, 1 to $p_{2}$, 0 for $p_{3}$ and 8 for himself. Pirate $p_{3}$ will not vote for that proposition, but pirates $p_{1}$ and $p_{2}$ will clearly vote for that proposition, hence we have found the repartition.

%%%%%%%%%%%%%%%%%%
%%%%%%% 5 %%%%%%%%
%%%%%%%%%%%%%%%%%%
\paragraph{Block 5, $n = 5$.}
When the crew has five pirates, pirate $p_{5}$ will need strictly more than 2 votes, or at least 3 votes, to stay alive. Hence he will need his vote, and 2 extra votes. Putting everything together, from the four pirates who are beneath him, he can only afford to loose two votes, not more.
It is difficult to make pirate $p_{4}$ happy, because he will always prefer to kill pirate $p_{5}$ and go back to block 4, where he wins 8: the only way to make pirate $p_{4}$ happy is to give him 9 or 10 coins, but then there are almost no coins left for pirate $p_{5}$. Hence, pirate $p_{5}$ will never have the vote of pirate $p_{4}$. However, in the previous case, pirate $p_{3}$ received 0 gold coins, hence we can easily win his vote by giving him 1 coin. We can also see that, in the previous case, pirate $p_{1}$ received 1 gold coin, hence we can easily win his vote by giving him 2 coins. The same can be said about pirate $p_{2}$, and since since pirate $p_{5}$ is highly intelligent and ferociously logical, he will, if his life is not threatened, always act to maximize his gain. This means that we will not give 2 coins to pirate $p_{1}$ and 2 other coins to pirate $p_{2}$, because pirate $p_{5}$ only needs the vote of one of these two pirates. This is where the extra rule is important: since he has the choice between two divisions of gold with the same amount for him, pirate $p_{5}$ will choose \textit{the one that gives the highest amount to the highest ranked pirates}, i.e., pirate $p_{2}$. This rule is really important because it allows to eliminate multiple solutions, and it makes the solution unique.
Hence, pirate $p_{5}$ will propose 0 to $p_{1}$, 2 to $p_{2}$, 1 for $p_{3}$, 0 for $p_{4}$ and 7 for himself. Pirates $p_{4}$ and $p_{1}$ will not vote for that proposition, but pirates $p_{2}$ and $p_{3}$ will clearly vote for that proposition, hence we have found the repartition.

\paragraph{Putting everything together.} The final decisions regarding the division of the gold are given on Table \ref{tab:pirates5}. On this table, each horizontal block shows the division of the gold, in function of the value of $n$, where $n$ is the number of pirates in the crew.


\begin{tabular}[h!]{|lllll||r|}
\hline
&         &           &                    &                     & $n$ \\ \hline
&         &           &                    & $p_{1}$             & 1   \\
&         &           &                    & 10                  &     \\ \hline
&         &           & $p_{2}$            & $p_{1}$             & 2   \\
&         &           & \textcolor{red}{0} & \textcolor{red}{10} &     \\ \hline
&         & $p_{3}$   & $p_{2}$            & $p_{1}$             & 3   \\
&         & 10        &  0                 & 0                   &     \\ \hline
& $p_{4}$ & $p_{3}$ & $p_{2}$              & $p_{1}$             & 4   \\
& 8       &  0        & 1                  & 1                   &     \\ \hline
$p_{5}$ & $p_{4}$ & $p_{3}$   & $p_{2}$            & $p_{1}$             & 5   \\
7       &  0      & 1         & 2                  &  0                  &     \\ \hline
\end{tabular}
\captionof{table}{Gold divisions for $n$ pirates, with $1 \leq n \leq 5$}
\label{tab:pirates5}


\vspace{5mm}


Now we can think about what happens if we consider even more pirates. Let us complete the above table for values up to $n = 7$. We find the results given in Table \ref{tab:pirates7}.



\begin{tabular}[h!]{|lllllll||r|}
\hline
&         &         &         &         &         &         & $n$ \\ \hline
&         & $p_{5}$ & $p_{4}$ & $p_{3}$ & $p_{2}$ & $p_{1}$ & 5   \\
&         & 7       & 0       & 1       & 2       & 0       &     \\ \hline
& $p_{6}$ & $p_{5}$ & $p_{4}$ & $p_{3}$ & $p_{2}$ & $p_{1}$ & 6   \\
& 6       & 0       & 1       & 2       &  0      & 1       &     \\ \hline
$p_{7}$ & $p_{6}$ & $p_{5}$ & $p_{4}$ & $p_{3}$ & $p_{2}$ & $p_{1}$ & 7   \\
6       &  0      & 1       & 2       & 0       & 1       & 0       &     \\
\hline
\end{tabular}
\captionof{table}{Gold divisions for $n$ pirates, with $5 \leq n \leq 7$}
\label{tab:pirates7}


\vspace{5mm}


Now we can think about what happens if we consider $n$ pirates. Let us give some notations: if the crew has $n$ pirates, then we know that pirate $p_{n}$ will propose a division of the gold. In this proposition, we define $a_{i}^{n}$ as the number of gold coins that pirate $i$ receives, for $i = 1, \dots, n$. The function that pirate $p_{n}$ wants to maximize is

\begin{equation*}
\sum_{i = 1}^{n} 2^{i} a_{i}^{n}
\end{equation*}

with the constraints

\begin{align*}
& 0 \leq a_{i}^{n} \leq 10 \quad i = 1, \dots, n\\
& \sum_{i = 1}^{n} a_{i}^{n} = 10 \\
& \abs{\mathcal{I}} \geq \ceil*{\dfrac{n-1}{2}}
\end{align*}

where $\mathcal{I} = \bracket{i \in \squared{1,n-1} \text{ such that } a_{i}^{n} > a_{i}^{n-1}}$.
